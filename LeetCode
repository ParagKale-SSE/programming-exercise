// leet code 217 - Contains Duplicate
    Dictionary<int,int> dic = new Dictionary<int,int>();
    for (int i = 0; i < nums.Length; i++)
    {
        if (!dic.ContainsKey(nums[i]))
        {
            dic.Add(nums[i], 1);
        }
        else
        {
            dic[nums[i]]++;
        }
    }
    return dic.Where(x => x.Value > 1).Any();

-----------------------------------------------------------------------------------------------------

// leet code 500 - KeyBoard Row

List<string> lstKeyBoardStr = new List<string>();
List<string> output = new List<string>();
Dictionary<char,int> dict = new Dictionary<char,int>();
int rowNum = 1;
lstKeyBoardStr.Add("qwertyuiop");
lstKeyBoardStr.Add("asdfghjkl");
lstKeyBoardStr.Add("zxcvbnm");

foreach(var item in lstKeyBoardStr)
{
    foreach(var ch in item)
    {
        dict.Add(ch, rowNum);
    }
    rowNum++;
}

foreach(var word in words)
{
    var valid = true;
    var lowerWord = word.ToLower();
    for (int i= 0; i< word.Length-1; i++)
    {
        if (dict[lowerWord[i]] != dict[lowerWord[i + 1]])
        {
            valid = false;
            break;
        }
    }
    if (valid)
    {
        output.Add(word);
    }
}
return output.ToArray();
